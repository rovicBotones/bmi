{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from 'react';\nimport { useState } from \"react\";\nexport default function ProfileScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weight = _useState4[0],\n      setWeight = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bmiResult = _useState6[0],\n      setBmiResult = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      status = _useState8[0],\n      setStatus = _useState8[1];\n\n  function calculateBMI() {\n    var bmi = Number(weight / Math.pow(height / 100, 2)).toFixed(2);\n    setBmiResult(bmi);\n    var bmiStatus = getStatus(bmi);\n    setStatus(bmiStatus);\n    setHeight(\"\");\n    setWeight(\"\");\n  }\n\n  function getStatus(bmi) {\n    if (bmi < 18.5) return \"Underweight\";else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";else return \"Obese\";\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.det\n  }, \"Enter Your Height\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Height cm\",\n    type: \"text\",\n    id: \"height\",\n    value: height,\n    onChange: function onChange(e) {\n      return setHeight(e.target.value);\n    }\n  }), React.createElement(Text, {\n    style: styles.det\n  }, \"Enter Your Weight\"), React.createElement(TextInput, {\n    id: \"weight\",\n    style: styles.input,\n    placeholder: \"Weight kg\",\n    type: \"text\",\n    id: \"weight\",\n    value: weight,\n    onChange: function onChange(e) {\n      return setWeight(e.target.value);\n    }\n  }), React.createElement(Text, {\n    style: styles.det\n  }, \"Enter Your Age\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Age\",\n    keyboardType: \"numeric\"\n  }), React.createElement(TouchableOpacity, {\n    style: styles.submitButton,\n    onPress: calculateBMI\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Submit\")), React.createElement(Text, {\n    style: styles.resultView\n  }, \"Your BMI is: \", bmiResult, \" \", \"\\n\", \"You are currently: \", status));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'gray'\n  },\n  resultView: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    color: '#F7F7F7'\n  },\n  submitButton: {\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 14,\n    backgroundColor: \"#FFE300\",\n    marginVertical: 30\n  },\n  backButton: {\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 14,\n    backgroundColor: \"#FFE300\",\n    marginVertical: 30\n  },\n  buttonText: {\n    fontFamily: 'sans-serif',\n    fontWeight: 'bold'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    color: '#F7F7F7'\n  },\n  det: {\n    color: '#F7F7F7'\n  },\n  input: {\n    backgroundColor: 'white',\n    marginVertical: 10,\n    height: 20,\n    width: '50%',\n    textAlign: 'center',\n    color: 'black',\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["C:/Users/rovic/Documents/CC2021/CC2021/new folder/BMI/components/ProfileScreen.js"],"names":["React","useState","ProfileScreen","height","setHeight","weight","setWeight","bmiResult","setBmiResult","status","setStatus","calculateBMI","bmi","Number","toFixed","bmiStatus","getStatus","styles","container","det","input","e","target","value","submitButton","buttonText","resultView","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","color","borderRadius","paddingVertical","paddingHorizontal","marginVertical","backButton","fontFamily","title","width","textAlign","separator"],"mappings":"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","sourcesContent":["import { View, Text, StyleSheet, TextInput, TouchableOpacity, Button } from \"react-native\";\r\nimport React from 'react';\r\n\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport default function ProfileScreen() {\r\n    const [height, setHeight] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n\r\n    const [bmiResult, setBmiResult] = useState(\"\");\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    function calculateBMI() {\r\n        let bmi = Number(weight / (height / 100) ** 2).toFixed(2);\r\n        setBmiResult(bmi);\r\n\r\n        let bmiStatus = getStatus(bmi);\r\n\r\n        setStatus(bmiStatus);\r\n\r\n        setHeight(\"\");\r\n        setWeight(\"\");\r\n    }\r\n\r\n    function getStatus(bmi) {\r\n        if (bmi < 18.5) return \"Underweight\";\r\n        else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";\r\n        else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";\r\n        else return \"Obese\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <Text style={styles.det}  >\r\n                Enter Your Height\r\n            </Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder='Height cm'\r\n\r\n                type=\"text\"\r\n                id=\"height\"\r\n                value={height}\r\n                onChange={(e) => setHeight(e.target.value)}\r\n            />\r\n            <Text style={styles.det}>\r\n                Enter Your Weight\r\n            </Text>\r\n            <TextInput\r\n                id=\"weight\"\r\n                style={styles.input}\r\n                placeholder='Weight kg'\r\n\r\n                type=\"text\"\r\n                id=\"weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n            />\r\n            <Text style={styles.det}>\r\n                Enter Your Age\r\n            </Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder='Age'\r\n                keyboardType=\"numeric\"\r\n            />\r\n\r\n            <TouchableOpacity style={styles.submitButton} onPress={calculateBMI} >\r\n                <Text style={styles.buttonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n\r\n\r\n\r\n            <Text style={styles.resultView}>\r\n                Your BMI is: {bmiResult} {\"\\n\"}\r\n                You are currently: {status}\r\n            </Text>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </View>\r\n    );\r\n};\r\n/*const [height, setHeight] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n  \r\n    const [bmiResult, setBmiResult] = useState(null);\r\n  \r\n    const [status, setStatus] = useState(\"\");\r\n  \r\n    function calculateBMI() {\r\n      let bmi = Number(weight / (height / 100) ** 2).toFixed(2);\r\n      setBmiResult(bmi);\r\n  \r\n      let bmiStatus = getStatus(bmi);\r\n  \r\n      setStatus(bmiStatus);\r\n  \r\n      setHeight(\"\");\r\n      setWeight(\"\");\r\n    }\r\n  \r\n    function getStatus(bmi) {\r\n      if (bmi < 18.5) return \"Underweight\";\r\n      else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";\r\n      else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";\r\n      else return \"Obese\";*/\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'gray',\r\n\r\n    },\r\n    resultView: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 80,\r\n        color: '#F7F7F7'\r\n    },\r\n    submitButton: {\r\n        borderRadius: 8,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 14,\r\n        backgroundColor: \"#FFE300\",\r\n        marginVertical: 30,\r\n\r\n    },\r\n    backButton: {\r\n        borderRadius: 8,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 14,\r\n        backgroundColor: \"#FFE300\",\r\n        marginVertical: 30,\r\n\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'sans-serif',\r\n        fontWeight: 'bold'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 80,\r\n        color: '#F7F7F7'\r\n    },\r\n    det: {\r\n        color: '#F7F7F7'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        marginVertical: 10,\r\n        height: 20,\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        paddingHorizontal: 10,\r\n        borderRadius: 5,\r\n    },\r\n    separator: {\r\n        marginVertical: 30,\r\n        height: 1,\r\n        width: '80%',\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}