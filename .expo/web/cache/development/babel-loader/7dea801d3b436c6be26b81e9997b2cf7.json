{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from 'react';\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weight = _useState4[0],\n      setWeight = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bmiResult = _useState6[0],\n      setBmiResult = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      status = _useState8[0],\n      setStatus = _useState8[1];\n\n  function calculateBMI() {\n    var bmi = Number(weight / Math.pow(height / 100, 2)).toFixed(2);\n    setBmiResult(bmi);\n    var bmiStatus = getStatus(bmi);\n    setStatus(bmiStatus);\n    setHeight(\"\");\n    setWeight(\"\");\n  }\n\n  function getStatus(bmi) {\n    if (bmi < 18.5) return \"Underweight\";else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";else return \"Obese\";\n  }\n\n  return React.createElement(\"div\", {\n    className: \"w-full max-w-xs m-10\"\n  }, React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n  }, React.createElement(\"h1\", {\n    className: \"text-center mb-4 text-xl\"\n  }, \" BMI Calculator\"), React.createElement(\"div\", {\n    className: \"mb-4\"\n  }, React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    for: \"username\"\n  }, \"Height\"), React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Height \",\n    type: \"text\",\n    placeholder: \"Height in cm\",\n    value: height,\n    onChange: function onChange(e) {\n      return setHeight(e.target.value);\n    }\n  })), React.createElement(\"div\", {\n    className: \"mb-6\"\n  }, React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    for: \"password\"\n  }, \"Weight\"), React.createElement(\"input\", {\n    className: \"shadow appearance-none  rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Weight\",\n    type: \"Weight in kg\",\n    placeholder: \"Weight in cm\",\n    value: weight,\n    onChange: function onChange(e) {\n      return setWeight(e.target.value);\n    }\n  })), React.createElement(\"div\", {\n    className: \"flex items-center justify-center\"\n  }, React.createElement(\"button\", {\n    className: \"bg-purple-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n    type: \"button\",\n    onClick: calculateBMI\n  }, \"Calculate BMI\")), bmiResult && React.createElement(\"div\", {\n    className: \"mt-4\"\n  }, React.createElement(\"p\", null, \"Your BMI is: \", bmiResult, \" \"), React.createElement(\"p\", null, \"You are currently: \", status))));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'gray'\n  },\n  resultView: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    color: '#F7F7F7'\n  },\n  submitButton: {\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 14,\n    backgroundColor: \"#FFE300\",\n    marginVertical: 30\n  },\n  backButton: {\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 14,\n    backgroundColor: \"#FFE300\",\n    marginVertical: 30\n  },\n  buttonText: {\n    fontFamily: 'sans-serif',\n    fontWeight: 'bold'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    color: '#F7F7F7'\n  },\n  det: {\n    color: '#F7F7F7'\n  },\n  input: {\n    backgroundColor: 'white',\n    marginVertical: 10,\n    height: 20,\n    width: '50%',\n    textAlign: 'center',\n    color: 'black',\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["C:/Users/rovic/Documents/CC2021/CC2021/new folder/BMI/components/ProfileScreen.js"],"names":["React","App","useState","height","setHeight","weight","setWeight","bmiResult","setBmiResult","status","setStatus","calculateBMI","bmi","Number","toFixed","bmiStatus","getStatus","e","target","value","styles","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","resultView","fontSize","fontWeight","marginBottom","color","submitButton","borderRadius","paddingVertical","paddingHorizontal","marginVertical","backButton","buttonText","fontFamily","title","det","input","width","textAlign","separator"],"mappings":"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","sourcesContent":["import { View, Text, StyleSheet, TextInput, TouchableOpacity, Button } from \"react-native\";\r\nimport React from 'react';\r\n\r\nexport default function App() {\r\n    const [height, setHeight] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n\r\n    const [bmiResult, setBmiResult] = useState(null);\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    function calculateBMI() {\r\n        let bmi = Number(weight / (height / 100) ** 2).toFixed(2);\r\n        setBmiResult(bmi);\r\n\r\n        let bmiStatus = getStatus(bmi);\r\n\r\n        setStatus(bmiStatus);\r\n\r\n        setHeight(\"\");\r\n        setWeight(\"\");\r\n    }\r\n\r\n    function getStatus(bmi) {\r\n        if (bmi < 18.5) return \"Underweight\";\r\n        else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";\r\n        else if (bmi >= 25 && bmi < 29.9) return \"Overweight\";\r\n        else return \"Obese\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"w-full max-w-xs m-10\">\r\n            <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n                <h1 className=\"text-center mb-4 text-xl\"> BMI Calculator</h1>\r\n                <div className=\"mb-4\">\r\n                    <label\r\n                        className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                        for=\"username\"\r\n                    >\r\n                        Height\r\n                    </label>\r\n                    <input\r\n                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        id=\"Height \"\r\n                        type=\"text\"\r\n                        placeholder=\"Height in cm\"\r\n                        value={height}\r\n                        onChange={(e) => setHeight(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <label\r\n                        className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                        for=\"password\"\r\n                    >\r\n                        Weight\r\n                    </label>\r\n                    <input\r\n                        className=\"shadow appearance-none  rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        id=\"Weight\"\r\n                        type=\"Weight in kg\"\r\n                        placeholder=\"Weight in cm\"\r\n                        value={weight}\r\n                        onChange={(e) => setWeight(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"flex items-center justify-center\">\r\n                    <button\r\n                        className=\"bg-purple-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                        type=\"button\"\r\n                        onClick={calculateBMI}\r\n                    >\r\n                        Calculate BMI\r\n                    </button>\r\n                </div>\r\n                {bmiResult && (\r\n                    <div className=\"mt-4\">\r\n                        <p>Your BMI is: {bmiResult} </p>\r\n                        <p>You are currently: {status}</p>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n    /*<View style={styles.container}>\r\n\r\n        <Text style={styles.det}  >\r\n            Enter Your Height\r\n        </Text>\r\n        <TextInput\r\n            style={styles.input}\r\n            placeholder='Height'\r\n            keyboardType=\"numeric\"\r\n        />\r\n        <Text style={styles.det}>\r\n            Enter Your Weight\r\n        </Text>\r\n        <TextInput\r\n            style={styles.input}\r\n            placeholder='Weight'\r\n            keyboardType=\"numeric\"\r\n        />\r\n        <Text style={styles.det}>\r\n            Enter Your Age\r\n        </Text>\r\n        <TextInput\r\n            style={styles.input}\r\n            placeholder='Age'\r\n            keyboardType=\"numeric\"\r\n        />\r\n\r\n        <TouchableOpacity style={styles.submitButton}>\r\n            <Text style={styles.buttonText}>Submit</Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n        <View>\r\n            <Text style={styles.resultView}>\r\n                Result Here!\r\n            </Text>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.submitButton} title=\"back to home\" onPress={() => navigation.navigate('API', { name: 'api' })}>\r\n            <Text style={styles.buttonText}>List</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.navigate('Home', { name: 'Home' })}>\r\n            <Text style={styles.buttonText}>Back to Home</Text>\r\n        </TouchableOpacity>\r\n\r\n    </View>*/\r\n\r\n};\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'gray',\r\n\r\n    },\r\n    resultView: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 80,\r\n        color: '#F7F7F7'\r\n    },\r\n    submitButton: {\r\n        borderRadius: 8,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 14,\r\n        backgroundColor: \"#FFE300\",\r\n        marginVertical: 30,\r\n\r\n    },\r\n    backButton: {\r\n        borderRadius: 8,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 14,\r\n        backgroundColor: \"#FFE300\",\r\n        marginVertical: 30,\r\n\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'sans-serif',\r\n        fontWeight: 'bold'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 80,\r\n        color: '#F7F7F7'\r\n    },\r\n    det: {\r\n        color: '#F7F7F7'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        marginVertical: 10,\r\n        height: 20,\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        paddingHorizontal: 10,\r\n        borderRadius: 5,\r\n    },\r\n    separator: {\r\n        marginVertical: 30,\r\n        height: 1,\r\n        width: '80%',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}