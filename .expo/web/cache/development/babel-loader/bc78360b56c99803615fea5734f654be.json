{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.apiCall();\n    }\n  }, {\n    key: \"apiCall\",\n    value: function apiCall() {\n      var response, respJson;\n      return _regeneratorRuntime.async(function apiCall$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://ns.nowna.com/zohoTest/test'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              respJson = _context.sent;\n              this.setState({\n                data: respJson.response\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, {\n        style: styles.txt\n      }, \"API INTEGRATION TESTING\"), React.createElement(FlatList, {\n        data: this.state.data,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, null, item.title);\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return navigation.navigate('ProfileScreen', {\n            name: 'ProfileScreen'\n          });\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText\n      }, \"Go Back to Profile Screen\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'gray',\n    fontFamily: 'sans-serif'\n  },\n  txt: {\n    color: 'black',\n    fontSize: 20\n  },\n  submitButton: {\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 14,\n    backgroundColor: \"#FFE300\",\n    marginVertical: 30\n  },\n  buttonText: {\n    fontFamily: 'sans-serif',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/rovic/Documents/CC2021/CC2021/new folder/BMI/components/ApiScreen.js"],"names":["React","App","state","data","apiCall","fetch","response","json","respJson","setState","styles","container","txt","item","title","submitButton","navigation","navigate","name","buttonText","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","fontFamily","color","fontSize","borderRadius","paddingVertical","paddingHorizontal","marginVertical","fontWeight"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;IAKMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAFU;AAKb;;;;WACD,6BAAoB;AAChB,WAAKC,OAAL;AACH;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBC,KAAK,CAAC,oCAAD,CAD9B;;AAAA;AACQC,cAAAA,QADR;AAAA;AAAA,+CAEyBA,QAAQ,CAACC,IAAT,EAFzB;;AAAA;AAEQC,cAAAA,QAFR;AAKI,mBAAKC,QAAL,CAAc;AAAEN,gBAAAA,IAAI,EAAEK,QAAQ,CAACF;AAAjB,eAAd;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAUA,kBAAS;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE;AAApB,mCADJ,EAII,oBAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IADrB;AAEI,QAAA,UAAU,EAAE;AAAA,cAAGU,IAAH,QAAGA,IAAH;AAAA,iBAAc,oBAAC,IAAD,QAAOA,IAAI,CAACC,KAAZ,CAAd;AAAA;AAFhB,QAJJ,EAWI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEJ,MAAM,CAACK,YAAhC;AAA8C,QAAA,OAAO,EAAE;AAAA,iBAAMC,UAAU,CAACC,QAAX,CAAoB,eAApB,EAAqC;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAArC,CAAN;AAAA;AAAvD,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS;AAApB,qCADJ,CAXJ,CADJ;AAoBH;;;;EA1CanB,KAAK,CAACoB,S;;AA8CxB,eAAenB,GAAf;AAGA,IAAMS,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,SAAS,EAAE;AACPY,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE,MAJV;AAKPC,IAAAA,UAAU,EAAE;AALL,GADkB;AAU7Bf,EAAAA,GAAG,EAAE;AACDgB,IAAAA,KAAK,EAAE,OADN;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAVwB;AAc7Bd,EAAAA,YAAY,EAAE;AACVe,IAAAA,YAAY,EAAE,CADJ;AAEVC,IAAAA,eAAe,EAAE,EAFP;AAGVC,IAAAA,iBAAiB,EAAE,EAHT;AAIVN,IAAAA,eAAe,EAAE,SAJP;AAKVO,IAAAA,cAAc,EAAE;AALN,GAde;AAsB7Bd,EAAAA,UAAU,EAAE;AACRQ,IAAAA,UAAU,EAAE,YADJ;AAERO,IAAAA,UAAU,EAAE;AAFJ;AAtBiB,CAAlB,CAAf","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport { StyleSheet, Text, View, TouchableOpacity, FlatList } from 'react-native';\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.apiCall();\r\n    }\r\n\r\n    async apiCall() {\r\n        let response = await fetch('https://ns.nowna.com/zohoTest/test');\r\n        let respJson = await response.json()\r\n        //console.log(respJson);\r\n\r\n        this.setState({ data: respJson.response })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.txt}>\r\n                    API INTEGRATION TESTING\r\n                </Text>\r\n                <FlatList\r\n                    data={this.state.data}\r\n                    renderItem={({ item }) => <Text>{item.title}</Text>}\r\n                />\r\n\r\n\r\n\r\n                <TouchableOpacity style={styles.submitButton} onPress={() => navigation.navigate('ProfileScreen', { name: 'ProfileScreen' })}>\r\n                    <Text style={styles.buttonText}>Go Back to Profile Screen</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'gray',\r\n        fontFamily: 'sans-serif',\r\n\r\n\r\n    },\r\n    txt: {\r\n        color: 'black',\r\n        fontSize: 20,\r\n    },\r\n    submitButton: {\r\n        borderRadius: 8,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 14,\r\n        backgroundColor: \"#FFE300\",\r\n        marginVertical: 30,\r\n\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'sans-serif',\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}